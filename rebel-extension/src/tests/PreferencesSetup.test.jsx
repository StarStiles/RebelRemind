/**
 * PreferencesSetup.test.jsx
 *
 * This test suite validates the `PreferencesSetup` page, which serves as the second step
 * in the Rebel Remind onboarding flow. It renders the Preferences component in setup mode,
 * shows instructions and guidance to users, and navigates them through setup completion.
 *
 * Covered Features:
 * - Renders Preferences UI only when authenticated
 * - Displays login prompt when unauthenticated
 * - Navigates to the Get Started page after preferences are finished
 * - Confirms full DOM rendering of instructional elements
 * 
 * The Preferences component is mocked to isolate behavior, and authentication state
 * is controlled via a mock of the `useAuth` hook.
 * 
 * CODE AND DOCUMENTATION GENERATED BY CHATGPT 4o
 * Authored by: Sebastian Yepez
 */

import React from 'react';
import PreferencesSetup from '../pages/PreferencesSetup';
import '@testing-library/jest-dom';
import { render, screen, fireEvent } from '@testing-library/react';
import { MemoryRouter, Routes, Route } from 'react-router-dom';


beforeAll(() => {
  global.chrome = {
    storage: {
      sync: {
        get: jest.fn((key, callback) => {
          callback({ notificationsEnabled: true }); // or false, depending on your test
        }),
        set: jest.fn(),
      },
    },
  };
});


jest.mock('../../public/hooks/useAuth', () => ({
    __esModule: true,
    default: jest.fn()
  }));

jest.mock('../components/LoginButton', () => () => <div>LoginButton</div>);
jest.mock('../components/Preferences', () => () => <div>PreferencesComponent</div>);

import useAuth from '../../public/hooks/useAuth';

describe('PreferencesSetup Page', () => {
    afterEach(() => {
        jest.clearAllMocks();
    });

    test('navigates to /get-started when Finish Setup is clicked', () => {
        useAuth.mockReturnValue(true);
      
        render(
          <MemoryRouter initialEntries={['/setup-preferences']}>
            <Routes>
              <Route path="/setup-preferences" element={<PreferencesSetup />} />
              <Route path="/get-started" element={<div>Get Started Page</div>} />
            </Routes>
          </MemoryRouter>
        );
      
        fireEvent.click(screen.getByText(/Finish Setup/i));
        expect(screen.getByText(/Get Started Page/)).toBeInTheDocument();
      });      
});
